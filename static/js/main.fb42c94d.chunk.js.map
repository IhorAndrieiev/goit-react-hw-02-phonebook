{"version":3,"sources":["components/Wrapper.jsx/Wrapper.styled.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Wrapper.jsx/Wrapper.jsx","App.js","index.js"],"names":["Container","styled","div","CustomSection","section","Title","h2","Section","title","children","CustomButton","button","Button","text","onClick","Input","input","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","onChange","id","placeholder","required","Component","PropsType","PropTypes","func","isRequired","Filter","onChangeFilterInput","Menu","ul","MenuItem","li","Text","span","ContactList","contacts","onDelete","map","Wrapper","filter","formSubmitHandler","addContact","uuidv4","find","contact","toLowerCase","alert","deleteContact","prevState","changeFilterInput","target","getVisibleContacts","normalizedFilter","includes","visibleContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb42c94d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #f5f5f5;\r\ntext-align: center;\r\nmargin: auto;\r\npadding:10px;\r\nmax-width: 800px\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const CustomSection = styled.section`\r\ntext-align: center;\r\nmargin: auto;\r\nbackground-color: #f5f5f5;\r\npadding: 20px;\r\n\r\n`;\r\nexport const Title = styled.h2`\r\npadding: 20px;\r\nfont-weight: 900;\r\n`;","import PropTypes from 'prop-types';\r\nimport { CustomSection } from './Section.styles';\r\nimport{Title} from './Section.styles'\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <CustomSection >\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </CustomSection>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  background-color: #0aefff;\n  border: 0.2px solid blue;\n  border-radius: 40%;\n  outline: none;\n  padding: 2px 4px;\n  color: #2b2626;\n  font-weight: bold;\n  font-size: 10px;\n  line-height: 20px;\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-left:10px;\n`;\n","import React from \"react\";\nimport { CustomButton } from \"./Button.styled\";\n\n\nfunction Button({ text, onClick }) {\n  return <CustomButton onClick={onClick}>{text}</CustomButton>;\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Input = styled.input`\r\nmargin: 5px;\r\npadding: 5px;\r\n`;","import React,{ Component }from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Button from \"../Button/Button\";\r\nimport {Input} from './ContactForm.styled'\r\n\r\nexport class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n     handleChange = e => {\r\n        const {name,value}=e.currentTarget\r\n        // console.log(e.currentTarget);\r\n        // console.log(e.currentTarget.name);\r\n        // console.log(e.currentTarget.value);\r\n        this.setState({[name]:value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor={this.nameInputId}>\r\n                    Name<br />  <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        onChange={this.handleChange}\r\n                        id = {this.nameInputId}\r\n                        placeholder=\"Enter LastName FirstName Patronymic\"\r\n                        required\r\n                    />\r\n                </label>\r\n                       <br />     \r\n                <label htmlFor={this.numberInputId}>\r\n                    Number<br />  <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        id={this.numberInputId}\r\n                        placeholder=\"Enter Phone\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <Button text={\"Add Contact\"} type=\"submit\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n    // handleNameChange = event => {\r\n    //     console.log(event.currentTarget.value)\r\n    //     this.setState({ name: event.currentTarget.value });\r\n    // };\r\n    \r\n    // handleNumberChange = event => {\r\n    //     this.setState({ number: event.currentTarget.value })\r\n    // }","import styled from \"@emotion/styled\";\r\n\r\nexport const Input = styled.input`\r\nmargin: 5px;\r\npadding: 5px;\r\n`;","import PropTypes from 'prop-types';\r\nimport {Input} from './Filter.styled';\r\n\r\nexport const Filter = ({value, onChangeFilterInput}) => (\r\n    <label htmlFor=\"\">\r\n        Find contacts by name<br /> \r\n        <Input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onChangeFilterInput}\r\n        />\r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilterInput: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nexport const Menu = styled.ul`\r\nlist-style: none;\r\nwidth: 400px;\r\npadding: 20px;\r\nmargin: auto;\r\n\r\n`;\r\n\r\nexport const MenuItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-style: normal;\r\n  /* border: 0.2px solid blue; */\r\n  padding: 0px;\r\n  text-align: center;\r\n  line-height: 5px;\r\n  & svg {width: 24px;\r\n    height: 24px;\r\n    margin: auto\r\n    \r\n}\r\n  &:hover {\r\n  & svg {\r\n    fill: #ff6b0a;\r\n    width: 24px;\r\n    height: 24px;\r\n  }}\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: #010101;\r\n  padding:15px;\r\n  \r\n  `;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n //import contacts from '../../contacts.json';\r\n import Button from '../Button/Button'\r\n import{MdContactPhone, MdPhone} from 'react-icons/md'\r\nimport {Container, Menu, MenuItem, Text } from './ContactList.styled'\r\n// const ContactList = ({contacts}) => (\r\n// <ul>\r\n//     {contacts.map(({ id, name, number }) => (\r\n        \r\n//         <li key={id}>\r\n//           {/* <MdContactPhone/> */}\r\n//           <p>\r\n//             {name}:{number}\r\n//           </p>\r\n//           {/* <MdPhone/> */}\r\n//         </li>\r\n//       ))}\r\n// </ul>\r\n// );\r\n\r\nfunction ContactList({contacts, onDelete}) {\r\n    \r\n    return (\r\n        <Container>\r\n        <Menu>\r\n            {contacts.map(({id,name,number}) => (\r\n                    <MenuItem key={id}>\r\n                    <MdContactPhone />\r\n                    <Text>{name} :</Text>\r\n                    <MdPhone />\r\n                    <Text>{number}</Text>\r\n                    <Button text={\"Delete\"} type=\"button\" onClick={() =>onDelete(id)}/>\r\n                </MenuItem>\r\n                \r\n            ))}\r\n                \r\n        </Menu>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n   onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n    \r\n","import React,{ Component }from \"react\";\r\nimport { Container } from \"./Wrapper.styled\";\r\nimport { Section } from '../Section/Section'\r\nimport { ContactForm } from '../ContactForm/ContactForm'\r\nimport { Filter } from \"../Filter/Filter\";\r\nimport ContactList from '../ContactList/ContactList'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport contacts from '../../contacts.json'\r\n\r\nclass Wrapper extends Component {\r\n    state = {\r\n        contacts: contacts,\r\n        filter: ''\r\n    };\r\n\r\n    formSubmitHandler = ({ name, number }) => {\r\n        //console.log({ name, number })\r\n        \r\n        const addContact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        this.state.contacts.find(\r\n            contact => contact.name.toLowerCase() === addContact.name.toLowerCase(),\r\n        )\r\n            ? alert(`${name} is already in contacts`)\r\n            : this.setState(({ contacts }) => ({\r\n                contacts: [addContact, ...contacts],\r\n            }));\r\n    };\r\n\r\n    deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n    changeFilterInput = e => {\r\n    this.setState({ filter: e.target.value });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n    \r\n    render() {\r\n        const visibleContacts = this.getVisibleContacts();\r\n        const { filter } = this.state;\r\n        \r\n        return (\r\n        <Container>\r\n            <Section title={\"Phonebook\"}>\r\n                    <ContactForm\r\n                    onSubmit={this.formSubmitHandler} />\r\n            </Section>\r\n            \r\n            <Section title={\"Contacts\"}>\r\n                    <Filter\r\n                        value={filter}\r\n                        onChangeFilterInput={this.changeFilterInput}\r\n                    />\r\n                    <ContactList contacts={visibleContacts}\r\n        //   contacts={this.onFilteredContacts()}\r\n            onDelete={this.deleteContact}\r\n        />  \r\n            </Section>\r\n        </Container>\r\n        )\r\n    }\r\n }\r\nexport default Wrapper;","// import React, { Component } from \"react\";\nimport React from \"react\";\nimport Wrapper from \"./components/Wrapper.jsx/Wrapper\";\nimport \"./App.css\";\n\n// class App extends Component {\n//   render() {\n//     return <Wrapper />;\n//   }\n// }\n// export default App;\n\n// const App = () => {\n//   return <Wrapper />;\n// };\n// export default App;\n\nconst App = () => <Wrapper />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}